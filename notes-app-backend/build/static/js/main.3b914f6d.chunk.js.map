{"version":3,"sources":["services/notes.js","components/Note.js","components/NoteForm.js","App.js","index.js"],"names":["baseUrl","Note","props","content","id","important","notes","setNotes","deleteThisNote","find","n","axios","delete","then","console","log","deleteNote","filter","note","catch","toggleThisImportance","changedNote","noteObject","put","res","data","updateNote","updatedNote","map","label","noteid","onClick","_","NoteForm","newNote","setNewNote","onSubmit","e","preventDefault","date","Date","toISOString","post","createNote","returndeNote","concat","type","value","onChange","target","App","useState","useEffect","get","fetchedData","showAll","setShowAll","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b914f6d.chunk.js","sourcesContent":["import axios from 'axios'\n// const baseUrl = 'http://localhost:3001/api/notes'\nconst baseUrl = '/api/notes'\n\nexport const getAllNotes = () => {\n    const req = axios.get(`${baseUrl}`)\n    return req.then(res => res.data)\n}\n\nexport const createNote = (noteObject) => {\n    const req = axios.post(`${baseUrl}`, noteObject)\n    return req.then(res => res.data)\n}\n\nexport const deleteNote = (id) => {\n    const req = axios.delete(`${baseUrl}/${id}`)\n    return req.then(() => console.log('note deleted'))\n}\n\nexport const updateNote = (id, noteObject) => {\n    const req = axios.put(`${baseUrl}/${id}`, noteObject)\n    return req.then(res => res.data)\n}","import React from 'react';\nimport { deleteNote, updateNote } from '../services/notes'\n\nconst Note = (props) => {\n    const {\n        content,\n        // note,\n        id,\n        important\n    } = props\n    const {\n        notes,\n        setNotes\n    } = props\n\n    // delete a note\n    const deleteThisNote = (id) => {\n        const note = notes.find(n => n.id === id)\n        if (note) {\n            return deleteNote(id)\n                .then(() => {\n                    setNotes(notes.filter(note => note.id !== id ? note : null))\n                })\n                .catch(() => {\n                    console.log('error: cannot delete this note');\n                    setNotes(notes.filter(n => n.id !== id))\n                })\n        }\n        setNotes(notes.filter(n => n.id !== id))\n        return console.log('this note does not exist');\n    }\n    const toggleThisImportance = (id) => {\n        const note = notes.find(n => n.id === id)\n        if (note) {\n            const changedNote = { ...note, important: !note.important }\n            return updateNote(id, changedNote)\n                .then(updatedNote => setNotes(notes.map(n => n.id !== id ? n : updatedNote)))\n                .catch(() => {\n                    console.log('fail')\n                    setNotes(notes.filter(n => n.id !== id))\n                })\n        }\n        setNotes(notes.filter(n => n.id !== id))\n        return console.log('this note no longer exists');\n    }\n    const label = important ? ' mark not important' : 'important'\n    return (\n        <p noteid={id}>\n            {content}\n            <span>\n                <button onClick={(_) => toggleThisImportance(id)}>{label}</button>\n                <button onClick={(_) => deleteThisNote(id)}>delete</button>\n            </span>\n        </p>\n    );\n}\nexport default Note;\n","import React from 'react';\nimport { createNote } from '../services/notes'\n\nconst NoteForm = (props) => {\n    // form props\n    const {\n        newNote,\n        setNewNote\n    } = props\n    // post req props\n    const {\n        notes,\n        setNotes\n    } = props\n    const addNoteHandler = (e) => {\n        e.preventDefault()\n        const noteObject = {\n            content: newNote,\n            important: false,\n            date: new Date().toISOString()\n        }\n        if (noteObject.content === '') {\n            return console.log('note cannot be blank!');\n        }\n        createNote(noteObject)\n            .then(returndeNote => setNotes(notes.concat(returndeNote)))\n            .then(() => setNewNote(''))\n            .catch(() => console.log('something went wrong couldnt add note'))\n    }\n    return (\n        <div>\n            <form onSubmit={addNoteHandler}>\n                <div>\n                    <input type=\"text\" id=\"new_note\" value={newNote} onChange={(e) => setNewNote(e.target.value)} />\n                    <button type=\"submit\">add note</button>\n                </div>\n            </form>\n        </div>\n    );\n}\nexport default NoteForm;","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport NoteForm from './components/NoteForm'\nimport { getAllNotes } from './services/notes'\n\n\n\nconst App = () => {\n    // all notes\n    const [notes, setNotes] = useState([])\n    useEffect(() => {\n        return getAllNotes()\n            .then(fetchedData => setNotes(fetchedData))\n            .catch(() => {\n                console.log('Could not fetch data');\n            })\n    }, [])\n\n    const [showAll, setShowAll] = useState(true)\n\n    // a new note\n    const [newNote, setNewNote] = useState('add a note..')\n\n    return (\n        <>\n            <h1>Notes App</h1>\n            <div>\n                <button onClick={(_) => setShowAll(!showAll)}>{showAll ? 'show important' : 'show all'}</button>\n            </div>\n            <div>\n                {\n                    notes.length\n                        ? (showAll\n                            ? notes\n                            : notes.filter(note => note.important === true))\n                            .map(note =>\n                                <Note\n                                    key={note.id}\n                                    note={note}\n                                    content={note.content}\n                                    id={note.id}\n                                    important={note.important}\n                                    notes={notes}\n                                    setNotes={setNotes}\n                                />)\n                        : <p>Fetching your notes...</p>\n                }\n            </div>\n            <div>\n                <NoteForm notes={notes} setNotes={setNotes} newNote={newNote} setNewNote={setNewNote} />\n            </div>\n        </>\n    )\n}\n\nexport default App;","import React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <StrictMode>\n        <App />\n    </StrictMode>,\n    document.getElementById('root')\n)"],"sourceRoot":""}